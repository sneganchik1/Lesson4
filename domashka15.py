# HW 15. OOP
# Створіть клас "Транспортний засіб" та підкласи "Автомобіль", "Літак", "Корабель", наслідувані від "Транспортний засіб". Наповніть класи атрибутами на свій розсуд.
# Створіть обʼєкти класів "Автомобіль", "Літак", "Корабель".
# За бажанням як завдання з *
#
# !!!!! ПОЗЖЕ ДОДЕЛАТЬ !!!!!!!!!!!!!   Допрацюйте класс Point так, щоб в атрибути x та y обʼєктів цього класу можна було записати тільки обʼєкти класу float
# Створіть класс Triangle (трикутник), який задається (ініціалізується) трьома точками (обʼєкти классу Point). Реалізуйте перевірку даних, аналогічно до класу Line. Визначет метод, який вираховує площу трикутника.
# Для обчислень можна використати формулу Герона (https://en.wikipedia.org/wiki/Heron%27s_formula)



''' простой вариант '''
class Транспортний_засіб:
   name = ''
class Автомобіль (Транспортний_засіб):
    model = ''

class Літак (Транспортний_засіб):
    sits = ''

class Корабель (Транспортний_засіб):
    cabin = ''

tesla = Транспортний_засіб()
tesla.name = "wx 100"

boing = Літак()
boing.name = 'boing 747'
boing.sits = 50

titanic = Корабель()
titanic.name = 'Titanic'
titanic.cabin = 120


# ''' лучше вариант'''
# class ТранспортнийЗасіб:
#     def __init__ (self, name = ''):
#         self.name = name
#
# class Автомобіль (ТранспортнийЗасіб):
#     def __init__(self, name = '', model = ''):
#         super().__init__(name)
#         self.model = model
#
# class Літак(ТранспортнийЗасіб):
#     def __init__(self, name = '', sits = ''):
#         super().__init__(name)
#         self.sits = sits
#
# class Корабель(ТранспортнийЗасіб):
#     def __init__(self, name = '', cabin = ''):
#         super().__init__(name)
#         self.cabin = cabin
#
# tesla = ТранспортнийЗасіб(name = "wx 100")
#
# boing = Літак(name = 'boing 747', sits = 50)
#
# titanic = Корабель(name = 'Titanic', cabin = 120)


